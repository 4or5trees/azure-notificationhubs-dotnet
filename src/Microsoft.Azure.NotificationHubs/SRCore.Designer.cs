//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.NotificationHubs.Common {
    
    
    internal partial class SRCore {
        
        static System.Resources.ResourceManager resourceManager;
        
        static System.Globalization.CultureInfo resourceCulture;
        
        private SRCore() {
        }
        
        internal static System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceManager, null)) {
                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("Microsoft.Azure.NotificationHubs.Common.SRCore", typeof(SRCore).Assembly);
                    resourceManager = temp;
                }
                return resourceManager;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("StrictResXFileCodeGenerator", "4.0.0.0")]
        internal static System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>Gets localized string like: The ActionItem was scheduled for execution but has not completed yet.</summary>
        internal static string ActionItemIsAlreadyScheduled {
            get {
                return ResourceManager.GetString("ActionItemIsAlreadyScheduled", Culture);
            }
        }
        
        /// <summary>Gets localized string like: An AsyncCallback threw an exception.</summary>
        internal static string AsyncCallbackThrewException {
            get {
                return ResourceManager.GetString("AsyncCallbackThrewException", Culture);
            }
        }
        
        /// <summary>Gets localized string like: End cannot be called twice on the same AsyncResult.</summary>
        internal static string AsyncResultAlreadyEnded {
            get {
                return ResourceManager.GetString("AsyncResultAlreadyEnded", Culture);
            }
        }
        
        /// <summary>Gets localized string like: An exception was thrown from a TransactionScope used to flow a transaction into an asynchronous operation.</summary>
        internal static string AsyncTransactionException {
            get {
                return ResourceManager.GetString("AsyncTransactionException", Culture);
            }
        }
        
        /// <summary>Gets localized string like: This buffer cannot be returned to the buffer manager because it is the wrong size.</summary>
        internal static string BufferIsNotRightSizeForBufferManager {
            get {
                return ResourceManager.GetString("BufferIsNotRightSizeForBufferManager", Culture);
            }
        }
        
        /// <summary>Gets localized string like: An incorrect IAsyncResult was provided to an 'End' method. The IAsyncResult object passed to 'End' must be the one returned from the matching 'Begin' or passed to the callback provided to 'Begin'.</summary>
        internal static string InvalidAsyncResult {
            get {
                return ResourceManager.GetString("InvalidAsyncResult", Culture);
            }
        }
        
        /// <summary>Gets localized string like: An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once.</summary>
        internal static string InvalidAsyncResultImplementationGeneric {
            get {
                return ResourceManager.GetString("InvalidAsyncResultImplementationGeneric", Culture);
            }
        }
        
        /// <summary>Gets localized string like: A null value was returned from an asynchronous 'Begin' method or passed to an AsyncCallback. Asynchronous 'Begin' implementations must return a non-null IAsyncResult and pass the same IAsyncResult object as the parameter to the AsyncCallback.</summary>
        internal static string InvalidNullAsyncResult {
            get {
                return ResourceManager.GetString("InvalidNullAsyncResult", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Object synchronization method was called from an unsynchronized block of code.</summary>
        internal static string InvalidSemaphoreExit {
            get {
                return ResourceManager.GetString("InvalidSemaphoreExit", Culture);
            }
        }
        
        /// <summary>Gets localized string like: You must cancel the previous timer before setting a new one.</summary>
        internal static string MustCancelOldTimer {
            get {
                return ResourceManager.GetString("MustCancelOldTimer", Culture);
            }
        }
        
        /// <summary>Gets localized string like: --- End of inner exception stack trace ---</summary>
        internal static string EndOfInnerExceptionStackTrace {
            get {
                return ResourceManager.GetString("EndOfInnerExceptionStackTrace", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Exit() is called without successfully entering the semaphore.</summary>
        internal static string AsyncSemaphoreExitCalledWithoutEnter {
            get {
                return ResourceManager.GetString("AsyncSemaphoreExitCalledWithoutEnter", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The Key Name specified for the SharedAccessAuthorizationRule contains invalid or unsupported characters.</summary>
        internal static string SharedAccessAuthorizationRuleKeyContainsInvalidCharacters {
            get {
                return ResourceManager.GetString("SharedAccessAuthorizationRuleKeyContainsInvalidCharacters", Culture);
            }
        }
        
        /// <summary>Gets localized string like: A SharedAccessAuthorizationRule requires a Primary Key of non-zero length.</summary>
        internal static string SharedAccessAuthorizationRuleRequiresPrimaryKey {
            get {
                return ResourceManager.GetString("SharedAccessAuthorizationRuleRequiresPrimaryKey", Culture);
            }
        }
        
        /// <summary>Gets localized string like: A SharedAccessAuthorizationRule supports only base64 keys.</summary>
        internal static string SharedAccessKeyShouldbeBase64 {
            get {
                return ResourceManager.GetString("SharedAccessKeyShouldbeBase64", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The argument {0} is null or empty.</summary>
        /// <param name="param0">Parameter 0 for string: The argument {0} is null or empty.</param>
        internal static string ArgumentNullOrEmpty(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ArgumentNullOrEmpty", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The IAsyncResult implementation '{0}' tried to complete a single operation multiple times. This could be caused by an incorrect application of IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values, or invokes the AsyncCallback multiple times.</summary>
        /// <param name="param0">Parameter 0 for string: The IAsyncResult implementation '{0}' tried to complete a single operation multiple times. This could be caused by an incorrect application of IAsyncResult implementation or other extensibility code, such as an IAsyncResult that returns incorrect CompletedSynchronously values, or invokes the AsyncCallback multiple times.</param>
        internal static string AsyncResultCompletedTwice(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AsyncResultCompletedTwice", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Number of string arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Number of string arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</param>
        internal static string EtwAPIMaxStringCountExceeded(object param0) {
            return string.Format(Culture, ResourceManager.GetString("EtwAPIMaxStringCountExceeded", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Number of arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Number of arguments passed to Etw WriteEvent has exceeded the maximum allowed limit of {0}.</param>
        internal static string EtwMaxNumberArgumentsExceeded(object param0) {
            return string.Format(Culture, ResourceManager.GetString("EtwMaxNumberArgumentsExceeded", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Etw registration failed with error code {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Etw registration failed with error code {0}.</param>
        internal static string EtwRegistrationFailed(object param0) {
            return string.Format(Culture, ResourceManager.GetString("EtwRegistrationFailed", Culture), param0);
        }
        
        /// <summary>Gets localized string like: An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation.</summary>
        /// <param name="param0">Parameter 0 for string: An incorrect implementation of the IAsyncResult interface may be returning incorrect values from the CompletedSynchronously property or calling the AsyncCallback more than once. The type {0} could be the incorrect implementation.</param>
        internal static string InvalidAsyncResultImplementation(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidAsyncResultImplementation", Culture), param0);
        }
        
        /// <summary>Gets localized string like: An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</summary>
        /// <param name="param0">Parameter 0 for string: An unexpected failure occurred. Applications should not attempt to handle this error. For diagnostic purposes, this English message is associated with the failure: {0}.</param>
        internal static string ShipAssertExceptionMessage(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ShipAssertExceptionMessage", Culture), param0);
        }
        
        /// <summary>Gets localized string like: A de-queue operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</summary>
        /// <param name="param0">Parameter 0 for string: A de-queue operation timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout.</param>
        internal static string TimeoutInputQueueDequeue(object param0) {
            return string.Format(Culture, ResourceManager.GetString("TimeoutInputQueueDequeue", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Argument {0} must be a non-negative timeout value. The provided value was {1}.</summary>
        /// <param name="param0">Parameter 0 for string: Argument {0} must be a non-negative timeout value. The provided value was {1}.</param>
        /// <param name="param1">Parameter 1 for string: Argument {0} must be a non-negative timeout value. The provided value was {1}.</param>
        internal static string TimeoutMustBeNonNegative(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TimeoutMustBeNonNegative", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Argument {0} must be a positive timeout value. The provided value was {1}.</summary>
        /// <param name="param0">Parameter 0 for string: Argument {0} must be a positive timeout value. The provided value was {1}.</param>
        /// <param name="param1">Parameter 1 for string: Argument {0} must be a positive timeout value. The provided value was {1}.</param>
        internal static string TimeoutMustBePositive(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TimeoutMustBePositive", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</summary>
        /// <param name="param0">Parameter 0 for string: The operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout.</param>
        internal static string TimeoutOnOperation(object param0) {
            return string.Format(Culture, ResourceManager.GetString("TimeoutOnOperation", Culture), param0);
        }
        
        /// <summary>Gets localized string like: An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: An unrecoverable error occurred. For diagnostic purposes, this English message is associated with the failure: '{0}'.</param>
        internal static string FailFastMessage(object param0) {
            return string.Format(Culture, ResourceManager.GetString("FailFastMessage", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</summary>
        /// <param name="param0">Parameter 0 for string: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</param>
        /// <param name="param1">Parameter 1 for string: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</param>
        /// <param name="param2">Parameter 2 for string: The maximum number of resources of type {0} has been reached or exceeded. Actual: {1}, Max allowed: {2}.</param>
        internal static string ResourceCountExceeded(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("ResourceCountExceeded", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: The argument {0} is null or white space.</summary>
        /// <param name="param0">Parameter 0 for string: The argument {0} is null or white space.</param>
        internal static string ArgumentNullOrWhiteSpace(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ArgumentNullOrWhiteSpace", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The enumeration value {0} is unsupported.</summary>
        /// <param name="param0">Parameter 0 for string: The enumeration value {0} is unsupported.</param>
        internal static string UnsupportedEnumerationValue(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedEnumerationValue", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The operation {0} is not allowed.</summary>
        /// <param name="param0">Parameter 0 for string: The operation {0} is not allowed.</param>
        internal static string UnsupportedOperation(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedOperation", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The operation {0} is not supported for the {1} transport type.</summary>
        /// <param name="param0">Parameter 0 for string: The operation {0} is not supported for the {1} transport type.</param>
        /// <param name="param1">Parameter 1 for string: The operation {0} is not supported for the {1} transport type.</param>
        internal static string UnsupportedTransport(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedTransport", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The entity {0} has an auto-forwarding policy to itself.</summary>
        /// <param name="param0">Parameter 0 for string: The entity {0} has an auto-forwarding policy to itself.</param>
        internal static string AutoForwardToSelf(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AutoForwardToSelf", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The attribute '{0}' for configuration element '{1}' cannot be null or empty.</summary>
        /// <param name="param0">Parameter 0 for string: The attribute '{0}' for configuration element '{1}' cannot be null or empty.</param>
        /// <param name="param1">Parameter 1 for string: The attribute '{0}' for configuration element '{1}' cannot be null or empty.</param>
        internal static string NullOrEmptyConfigurationAttribute(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("NullOrEmptyConfigurationAttribute", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Multiple transport setting elements are not allowed in '{0}' section. Make sure only one is defined.</summary>
        /// <param name="param0">Parameter 0 for string: Multiple transport setting elements are not allowed in '{0}' section. Make sure only one is defined.</param>
        internal static string MultipleTransportSettingConfigurationElement(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MultipleTransportSettingConfigurationElement", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Dictionary key {0} is being modified by a different transaction.</summary>
        /// <param name="param0">Parameter 0 for string: Dictionary key {0} is being modified by a different transaction.</param>
        internal static string DictionaryKeyIsModified(object param0) {
            return string.Format(Culture, ResourceManager.GetString("DictionaryKeyIsModified", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Dictionary key {0} does not exist</summary>
        /// <param name="param0">Parameter 0 for string: Dictionary key {0} does not exist</param>
        internal static string DictionaryKeyNotExist(object param0) {
            return string.Format(Culture, ResourceManager.GetString("DictionaryKeyNotExist", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The argument {0} cannot exceed {1} characters</summary>
        /// <param name="param0">Parameter 0 for string: The argument {0} cannot exceed {1} characters</param>
        /// <param name="param1">Parameter 1 for string: The argument {0} cannot exceed {1} characters</param>
        internal static string ArgumentStringTooBig(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ArgumentStringTooBig", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The Key Name specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</summary>
        /// <param name="param0">Parameter 0 for string: The Key Name specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</param>
        internal static string SharedAccessAuthorizationRuleKeyNameTooBig(object param0) {
            return string.Format(Culture, ResourceManager.GetString("SharedAccessAuthorizationRuleKeyNameTooBig", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The Key specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</summary>
        /// <param name="param0">Parameter 0 for string: The Key specified for the SharedAccessAuthorizationRule exceeds the limit of {0} characters.</param>
        internal static string SharedAccessAuthorizationRuleKeyTooBig(object param0) {
            return string.Format(Culture, ResourceManager.GetString("SharedAccessAuthorizationRuleKeyTooBig", Culture), param0);
        }
        
        /// <summary>Gets localized string like: A SharedAccessAuthorizationRule only supports keys of size {0} bytes.</summary>
        /// <param name="param0">Parameter 0 for string: A SharedAccessAuthorizationRule only supports keys of size {0} bytes.</param>
        internal static string SharedAccessRuleAllowsFixedLengthKeys(object param0) {
            return string.Format(Culture, ResourceManager.GetString("SharedAccessRuleAllowsFixedLengthKeys", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The argument is out of range. It should be between {0} and {1}.</summary>
        /// <param name="param0">Parameter 0 for string: The argument is out of range. It should be between {0} and {1}.</param>
        /// <param name="param1">Parameter 1 for string: The argument is out of range. It should be between {0} and {1}.</param>
        internal static string ArgumentOutOfRange(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ArgumentOutOfRange", Culture), param0, param1);
        }
    }
}

